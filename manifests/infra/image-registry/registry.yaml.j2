apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: openshift-image-registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
        - name: registry
          image: registry:2
          env:
            - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
              value: /var/lib/registry
            - name: REGISTRY_HTTP_ADDR
              value: "0.0.0.0:5000"
            - name: REGISTRY_STORAGE_DELETE_ENABLED
              value: "true"
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              value: ""
            - name: REGISTRY_HTTP_TLS_KEY
              value: ""
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: registry-storage
              mountPath: /var/lib/registry
      volumes:
        - name: registry-storage
          persistentVolumeClaim:
            claimName: registry-storage
---
apiVersion: v1
kind: Service
metadata:
  name: registry
  namespace: openshift-image-registry
spec:
  selector:
    app: registry
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
---

apiVersion: v1
kind: Service
metadata:
  name: registry-loadbalancer
  namespace: openshift-image-registry
spec:
  type: LoadBalancer
  selector:
    app: registry
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
  externalIPs:
    - {{ external_ip }}
---

apiVersion: v1
kind: Service
metadata:
  name: registry-nodeport
  namespace: openshift-image-registry
spec:
  type: NodePort
  selector:
    app: registry
  ports:
    - protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 30500

---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: default-route
  namespace: openshift-image-registry
spec:
  host: default-route-openshift-image-registry.apps.{{ external_ip }}.nip.io
  to:
    kind: Service
    name: registry
  port:
    targetPort: 5000
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Allow
 